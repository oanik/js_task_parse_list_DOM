{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","typeCastFunc","item","element","replace","num","parseInt","sortList","callback","ulList","array","children","sort","a","b","operand1","dataset","salary","operand2","forEach","append","Employee","name","position","age","getEmployees","EmployeeClass","newArray","obj","innerText","push"],"mappings":";AAAA,aAoDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAlDA,IAAMA,EAAOC,SAASC,cAAc,MAC9BC,EAAe,SAACC,GACdC,IAAAA,EAAUD,EAAKE,QAAQ,MAAO,IAG7BC,OAFKC,SAASH,EAAQC,QAAQ,KAAM,MAKvCG,EAAW,SAASC,EAAUC,GACfA,IAATC,EAASD,EAAAA,EAAOE,UADgB,MAAA,GAYnCD,OATPA,EAAME,KAAK,SAACC,EAAGC,GACPC,IAAAA,EAAWP,EAASK,EAAEG,QAAQC,QAG7BC,OAFUV,EAASM,EAAEE,QAAQC,QAElBF,IAGpBL,EAAMS,QAAQ,SAAAhB,GAAWM,OAAAA,EAAOW,OAAOjB,KAEhCO,GAGHW,EACJ,SAAYC,EAAAA,EAAMC,EAAUN,EAAQO,GAAK,EAAA,KAAA,GAClCF,KAAAA,KAAOA,EACPC,KAAAA,SAAWA,EACXN,KAAAA,OAASA,EACTO,KAAAA,IAAMA,GAITC,EAAe,SAASC,EAAejB,GACrCkB,IAAAA,EAAW,GAaVA,OAZYlB,EAAAA,EAAOE,UAFyB,MAAA,GAI7CQ,QAAQ,SAAAjB,GACN0B,IAAAA,EAAM,IAAIF,EACdxB,EAAK2B,UACL3B,EAAKc,QAAQO,SACbrB,EAAKc,QAAQC,OACbf,EAAKc,QAAQQ,KAEfG,EAASG,KAAKF,KAGTD,GAGTpB,EAASN,EAAcH,GACvB2B,EAAaJ,EAAUvB","file":"main.a9e8856a.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\nconst typeCastFunc = (item) => {\n  const element = item.replace(/\\$/g, '');\n  const num = parseInt(element.replace(/,/g, ''));\n\n  return num;\n};\n\nconst sortList = function(callback, ulList) {\n  const [...array] = ulList.children;\n\n  array.sort((a, b) => {\n    const operand1 = callback(a.dataset.salary);\n    const operand2 = callback(b.dataset.salary);\n\n    return operand2 - operand1;\n  });\n\n  array.forEach(element => ulList.append(element));\n\n  return array;\n};\n\nclass Employee {\n  constructor(name, position, salary, age) {\n    this.name = name;\n    this.position = position;\n    this.salary = salary;\n    this.age = age;\n  }\n};\n\nconst getEmployees = function(EmployeeClass, ulList) {\n  const newArray = [];\n  const [...array] = ulList.children;\n\n  array.forEach(item => {\n    const obj = new EmployeeClass(\n      item.innerText,\n      item.dataset.position,\n      item.dataset.salary,\n      item.dataset.age);\n\n    newArray.push(obj);\n  });\n\n  return newArray;\n};\n\nsortList(typeCastFunc, list);\ngetEmployees(Employee, list);\n"]}